generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

model User {
  id Int @id @default(autoincrement())

  fullName String
  email    String   @unique
  password String
  role     UserRole @default(USER)

  provider String?
  providerId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart             Cart?
  order            Order[]
  verificationCode VerificationCode?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Product {
  id Int @id @default(autoincrement())

  name     String
  imageUrl String

  ingredients Ingredient[]
  items       ProductItem[]

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Ingredient   Ingredient?   @relation(fields: [ingredientId], references: [id])
  ingredientId Int?
  ProductItem  ProductItem[]
}

model ProductItem {
  id Int @id @default(autoincrement())

  price     Int
  size      Int?
  pizzaType Int?

  product   Product    @relation(fields: [poductId], references: [id])
  poductId  Int
  CartItems CartItem[]
}

model Ingredient {
  id Int @id @default(autoincrement())

  name     String
  price    Int
  imageUrl String

  products  Product[]
  cartItems CartItem[]

  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  cartItem   CartItem? @relation(fields: [cartItemId], references: [id])
  cartItemId Int?
}

model Cart {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  items CartItem[]

  token String

  totalAmount Int @default(0)

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  CartItem  CartItem[]
  Order     Order[]
}

model CartItem {
  id Int @id @default(autoincrement())

  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  quantity Int

  ingredients Ingredient[]
}

model Order {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  token String

  totalAmount Int
  status      OrderStatus
  paymentId   String?

  items Json

  fullName String
  email    String
  phone    String
  address  String
  comment  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart   Cart? @relation(fields: [cartId], references: [id])
  cartId Int?
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int   @unique

  code String

  createdAt DateTime @default(now())
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}
